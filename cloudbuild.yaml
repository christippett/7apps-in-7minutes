steps:
  # ============================================================================ #
  #                             üìê CONFIGURE KUBECTL                             #
  # ============================================================================ #

  - id: "Configure: kubectl"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - container
      - clusters
      - get-credentials
      - ${_GKE_CLUSTER_NAME}
      - --zone=${_ZONE}
    waitFor: ["-"]

  # ============================================================================ #
  #                            üì¶ BUILD DOCKER IMAGE                            #
  # ============================================================================ #

  - id: "Build: Docker image"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - builds
      - submit
      - --config=cloudbuild.container.yaml
      - --substitutions=SHORT_SHA=$SHORT_SHA,_IMAGE_NAME=${_IMAGE_NAME}
    waitFor: ["-"]

  # ============================================================================ #
  #                              üïπÔ∏è CLOUD FUNCTIONS                              #
  # ============================================================================ #

  - id: "Deploy: Cloud Functions"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - --quiet
      - functions
      - deploy
      - ${_CLOUD_FUNCTIONS_NAME}
      - --trigger-http
      - --runtime=python38
      - --entry-point=greeting
    dir: "app"
    waitFor: ["-"]

  # ============================================================================ #
  #                           üí™ APP ENGINE (STANDARD)                           #
  # ============================================================================ #

  - id: "Deploy: App Engine (Standard)"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - --quiet
      - app
      - deploy
      - --appyaml=app.standard.yaml
      - --promote
    dir: "app"
    waitFor: ["-"]

  # ============================================================================ #
  #                           ü¶æ APP ENGINE (FLEXIBLE)                           #
  # ============================================================================ #

  - id: "Deploy: App Engine (Flexible)"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - --quiet
      - app
      - deploy
      - --appyaml=app.flex.yaml
      - --promote
      - --image-url=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
    dir: "app"
    waitFor: ["Build: Docker image"]

  # ============================================================================ #
  #                                 üèÉ‚Äç‚ôÄÔ∏è CLOUD RUN                                 #
  # ============================================================================ #

  - id: "Deploy: Cloud Run"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - --quiet
      - run
      - deploy
      - ${_CLOUD_RUN_NAME}
      - --platform=managed
      - --allow-unauthenticated
      - --image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - --region=${_REGION}
    waitFor: ["Build: Docker image"]

  # ============================================================================ #
  #                       üöÇ GOOGLE KUBERENTES ENGINE (GKE)                      #
  # ============================================================================ #

  - id: "Deploy: Google Kubernetes Engine (GKE)"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - set
      - image
      - deployment/app
      - app=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
    waitFor: ["Configure: kubectl", "Build: Docker image"]

  # ============================================================================ #
  #                           ‚öôÔ∏è GOOGLE COMPUTE ENGINE                           #
  # ============================================================================ #

  - id: "Deploy: Google Compute Engine (GCE)"
    name: "gcr.io/cloud-builders/curl"
    args:
      - --request=PATCH
      - https://compute.7apps.servian.fun:9000/hooks/update-env
      - "--header 'Authorization: Basic YWRtaW46cGFzc3dvcmQ='"
      - "--header 'Content-Type: application/json'"
      - '--data-raw ''{ "key": "CONTAINER_IMAGE_TAG", "value": "$SHORT_SHA" }'''
    waitFor: ["Build: Docker image"]

  # ============================================================================ #
  #                             üèÉ‚Äç‚ôÇÔ∏è CLOUD RUN (ANTHOS)                            #
  # ============================================================================ #

  - id: "Deploy: Cloud Run on Anthos"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - --quiet
      - run
      - deploy
      - ${_CLOUD_RUN_ANTHOS_NAME}
      - --image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - --platform=gke
      - --cluster=${_GKE_CLUSTER_NAME}
      - --cluster-location=${_ZONE}
      - --namespace=default
      - --service-account=${_GKE_SERVICE_ACCOUNT}
    waitFor: ["Build: Docker image"]

# ============================================================================ #
#                                    Fin üèÅ                                    #
# ============================================================================ #

timeout: 3600s
substitutions:
  _IMAGE_NAME: 7apps-app
  _REGION: us-central1
  _ZONE: us-central1-a
  _GKE_CLUSTER_NAME: tbc
  _GKE_SERVICE_ACCOUNT: tbc
  _DOMAIN: tbc
  _CLOUD_RUN_NAME: tbc
  _CLOUD_RUN_ANTHOS_NAME: tbc
  _CLOUD_FUNCTIONS_NAME: tbc
  _APPENGINE_STANDARD_NAME: tbc
  _APPENGINE_FLEXIBLE_NAME: tbc
  _COMPUTE_ENGINE_NAME: tbc
  _KUBERNETES_ENGINE_NAME: tbc
options:
  substitution_option: "ALLOW_LOOSE"
