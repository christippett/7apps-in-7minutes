steps:
  # ============================================================================ #
  #                            üì¶ BUILD DOCKER IMAGE                            #
  # ============================================================================ #

  - id: docker-pull
    name: gcr.io/cloud-builders/docker
    entrypoint: "bash"
    args: ["-c", "docker pull gcr.io/$PROJECT_ID/${_IMAGE}:latest || exit 0"]

  - id: docker-build
    dir: ./src/app
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --cache-from=gcr.io/$PROJECT_ID/${_IMAGE}:latest
      - --tag=gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA
      - --tag=gcr.io/$PROJECT_ID/${_IMAGE}:latest
      - .
  - id: docker-push
    name: gcr.io/cloud-builders/docker
    args: ["push", "gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA"]

  # ============================================================================ #
  #                              üïπÔ∏è CLOUD FUNCTIONS                              #
  # ============================================================================ #

  - id: gcloud-functions-deploy
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: gcloud
    args:
      - functions
      - deploy
      - ${_CLOUD_FUNCTIONS_APP}
      - --trigger-http
      - --runtime=python38
      - --entry-point=main
      - "--set-env-vars=APP_TITLE=Cloud Function"
      - --source=./
      - --quiet
    dir: "src/app"
    waitFor: ["-"]

  # ============================================================================ #
  #                           üí™ APP ENGINE (STANDARD)                           #
  # ============================================================================ #

  - id: gcloud-app-deploy-standard
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: gcloud
    args:
      - app
      - deploy
      - app.standard.yaml
      - --promote
      - --version=$SHORT_SHA
      - --stop-previous-version
      - --quiet
    dir: "src/app"
    waitFor: ["-"]

  # ============================================================================ #
  #                           ü¶æ APP ENGINE (FLEXIBLE)                           #
  # ============================================================================ #

  - id: gcloud-app-deploy-flexible
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: gcloud
    args:
      - app
      - deploy
      - app.flex.yaml
      - --image-url=gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA
      - --promote
      - --version=$SHORT_SHA
      - --stop-previous-version
      - --quiet
    dir: "src/app"
    waitFor: ["docker-build"]

  # ============================================================================ #
  #                                 üèÉ‚Äç‚ôÄÔ∏è CLOUD RUN                                 #
  # ============================================================================ #

  - id: gcloud-run-deploy-managed
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: gcloud
    args:
      - run
      - deploy
      - ${_CLOUD_RUN_APP}
      - --image=gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA
      - "--set-env-vars=APP_TITLE=Cloud Run"
      - --platform=managed
      - --region=us-central1
      - --quiet
    waitFor: ["docker-build"]

  # ============================================================================ #
  #                             üèÉ‚Äç‚ôÇÔ∏è CLOUD RUN (ANTHOS)                            #
  # ============================================================================ #

  - id: gcloud-run-deploy-anthos
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: gcloud
    args:
      - run
      - deploy
      - ${_CLOUD_RUN_ANTHOS_APP}
      - --image=gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA
      - "--set-env-vars=APP_TITLE=Cloud Run: Anthos"
      - --platform=gke
      - --cluster=${_GKE_CLUSTER}
      - --cluster-location=${_ZONE}
      - --namespace=default
      - --quiet
    waitFor: ["docker-build"]

  # ============================================================================ #
  #                           ‚öôÔ∏è GOOGLE COMPUTE ENGINE                           #
  # ============================================================================ #

  - id: update-compute-engine
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: bash
    args:
      - "-c"
      - |
        gcloud compute start-iap-tunnel ${_COMPUTE_ENGINE_APP} 9000 \
          --local-host-port=localhost:9000 &

        # give tunnel time to connect
        sleep 15;

        curl -X PATCH https://localhost:9000/hooks/update-env \
        --silent --show-error --fail --insecure \
        --data '{ "key": "CONTAINER_IMAGE_TAG", "value": "$SHORT_SHA" }' \
        --header "Host: ${_COMPUTE_ENGINE_DOMAIN}" \
        --header 'Authorization: Basic YWRtaW46cGFzc3dvcmQ=' \
        --header 'Content-Type: application/json'
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_ZONE}"
    waitFor: ["docker-build"]

  # ============================================================================ #
  #                       üöÇ GOOGLE KUBERENTES ENGINE (GKE)                      #
  # ============================================================================ #

  - id: gomplate-config
    name: hairyhenderson/gomplate
    args: ["-f", "app.k8s.tmpl", "-o", "app.k8s.yaml"]
    dir: "src/app"
    env:
      - "IMAGE=gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA"
      - "APP=${_GKE_APP}"
      - "DOMAIN=${_GKE_DOMAIN}"

  - id: kubectl-apply
    name: gcr.io/cloud-builders/kubectl
    args: ["apply", "-f", "app.k8s.yaml"]
    dir: "src/app"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_ZONE}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
    waitFor: ["docker-build", "gomplate-config"]

# ============================================================================ #
#                                    Fin üèÅ                                    #
# ============================================================================ #

images:
  - gcr.io/$PROJECT_ID/${_IMAGE}:latest
  - gcr.io/$PROJECT_ID/${_IMAGE}:$SHORT_SHA

timeout: 3600s

options:
  substitution_option: ALLOW_LOOSE

substitutions:
  _IMAGE: 7apps-demo
  _REGION: australia-southeast1
  _ZONE: australia-southeast1-a
  _CLOUD_RUN_APP: run
  _CLOUD_RUN_ANTHOS_APP: run-anthos
  _CLOUD_FUNCTIONS_APP: function
  _APPENGINE_STANDARD_APP: default
  _APPENGINE_FLEXIBLE_APP: flexible
  _COMPUTE_ENGINE_APP: compute
  _COMPUTE_ENGINE_DOMAIN: compute.7apps.cloud
  _GKE_CLUSTER: gke-cluster
  _GKE_APP: gke-app
  _GKE_DOMAIN: gke.7apps.cloud
